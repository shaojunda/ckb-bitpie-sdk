package main

import (
	"context"
	"fmt"
	"github.com/ququzone/ckb-sdk-go/crypto/secp256k1"
	"github.com/ququzone/ckb-sdk-go/rpc"
	"github.com/ququzone/ckb-sdk-go/transaction"
	"log"

	"github.com/ququzone/ckb-bitpie-sdk/client"
	"github.com/ququzone/ckb-bitpie-sdk/config"
)

func main() {
	// step 0: init config
	c, _ := config.Load("config-example.yaml")

	// step 1: init rpc client
	cli, err := client.NewRpcClient(c.Rpc)
	if err != nil {
		log.Println(err)
	}

	//tx, _ := hex.DecodeString("7b2276657273696f6e223a22307830222c2263656c6c5f64657073223a5b7b226f75745f706f696e74223a7b2274785f68617368223a22307834663332623365333962643162363335306433323666646661666466653035653532323138363563333039386165333233303936663062666336396530613863222c22696e646578223a22307830227d2c226465705f74797065223a226465705f67726f7570227d2c7b226f75745f706f696e74223a7b2274785f68617368223a22307863316232616531323966616437343635616161396163633937383566383432626133653665386238303531643839396465666138396635353038613737393538222c22696e646578223a22307830227d2c226465705f74797065223a22636f6465227d5d2c226865616465725f64657073223a5b5d2c22696e70757473223a5b7b2273696e6365223a22307830222c2270726576696f75735f6f7574707574223a7b2274785f68617368223a22307835663864323639393138643666336263623533333435306563343234366338313237343765316538666138303136613566393962646634383132316532346565222c22696e646578223a22307830227d7d2c7b2273696e6365223a22307830222c2270726576696f75735f6f7574707574223a7b2274785f68617368223a22307834613761656139323037363037353135303633386233653933356531383530343030343534626638313965343639646631623535383566653032656165373338222c22696e646578223a22307831227d7d2c7b2273696e6365223a22307830222c2270726576696f75735f6f7574707574223a7b2274785f68617368223a22307837663538303266333739326633363433323665643331663335623265396564626436396232366561636538393539383561363134666535613762623637626162222c22696e646578223a22307831227d7d5d2c226f757470757473223a5b7b226361706163697479223a223078333465363263653030222c226c6f636b223a7b22636f64655f68617368223a22307838366131633639383761346163626531613838376363613463396464326163396663623037343035626265646135316238363162313862626637343932633462222c22686173685f74797065223a2274797065222c2261726773223a22307863613065613931386664396134313662313132303738333134346365313534356639353466336362227d2c2274797065223a7b22636f64655f68617368223a22307834386462663539623463376565313534373233383032316234383639626365656466346565613662343337373265356436366566383836356236616537323132222c22686173685f74797065223a2264617461222c2261726773223a22307839346262633833323765313664313935646538373831356333393165376239313331653830343139633531613430356130623231323237633665653035313239227d7d2c7b226361706163697479223a223078333465363263653030222c226c6f636b223a7b22636f64655f68617368223a22307838366131633639383761346163626531613838376363613463396464326163396663623037343035626265646135316238363162313862626637343932633462222c22686173685f74797065223a2274797065222c2261726773223a22307862373238363539353734633835653838643935376264363433626237343761303066303138643732227d2c2274797065223a7b22636f64655f68617368223a22307834386462663539623463376565313534373233383032316234383639626365656466346565613662343337373265356436366566383836356236616537323132222c22686173685f74797065223a2264617461222c2261726773223a22307839346262633833323765313664313935646538373831356333393165376239313331653830343139633531613430356130623231323237633665653035313239227d7d2c7b226361706163697479223a22307836653530616531356135222c226c6f636b223a7b22636f64655f68617368223a22307838366131633639383761346163626531613838376363613463396464326163396663623037343035626265646135316238363162313862626637343932633462222c22686173685f74797065223a2274797065222c2261726773223a22307862373238363539353734633835653838643935376264363433626237343761303066303138643732227d2c2274797065223a6e756c6c7d5d2c226f7574707574735f64617461223a5b2230783030653166353035303030303030303030303030303030303030303030303030222c2230783030653166353035303030303030303030303030303030303030303030303030222c223078225d2c227769746e6573736573223a5b223078222c2230783535303030303030313030303030303035353030303030303535303030303030343130303030303064343661343339646438366533633833663562313931343665333162636634343163363362663738363864363366376534356230636130306238663863363637333538313765313463353832623436626533653531663132306663386438623061346365396333363563353566333635613764343037323066636433386665333031222c223078225d7d")
	//fmt.Println("11111", string(tx))

	//t, err := rpc.TransactionFromString(string(tx))
	//fmt.Println(err)
	//fmt.Println(t)

	//// step 11: build transfer
	t, _, err := client.BuildNormalTransaction("ckt1qg8mxsu48mncexvxkzgaa7mz2g25uza4zpz062relhjmyuc52ps3zn47dugwyk5e6mgxvlf5ukx7k3uyq9wlkkmegke", "ckt1qg8mxsu48mncexvxkzgaa7mz2g25uza4zpz062relhjmyuc52ps3r8xmv80qkn59a2gwx0dc3kay4h5c98vlqzm83mc", "10000", "0xeb1d5de06feee7fc0566386bd16b5d6141ac4278f1325e3ad7b984f5a9368507", cli, c)
	if err != nil {
		log.Fatalf("build transaction error: %v\n", err)
	}

	key, _ := secp256k1.HexToKey("051741b2da4ebf759112639907f419f0afd6b38464d054caac8db0a4b2fbd3b1")
	_ = transaction.SingleSegmentSignTransaction(t, 1, len(t.Witnesses), transaction.EmptyWitnessArg, key)
	hash, err := cli.SendTransaction(context.Background(), t)
	if err != nil {
		fmt.Println(rpc.TransactionString(t))
		log.Fatalf("send transaction error: %v\n", err)
	}
	fmt.Printf("transform account transaction: %s\n", hash.String())

	//b, _ := client.BalancesForAddress("ckt1qjr2r35c0f9vhcdgslx2fjwa9tylevr5qka7mfgmscd33wlhfykyhdegvk2hfjz73rv400ty8wm50gq0qxxhym25xmv", cli, c)
	//fmt.Println(b[0])
	//fmt.Println(b[1])
}
